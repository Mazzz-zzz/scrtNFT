[{"C:\\Users\\Mazzz\\Documents\\secretobjects\\secretobj\\scrt\\src\\App.js":"1","C:\\Users\\Mazzz\\Documents\\secretobjects\\secretobj\\scrt\\src\\reportWebVitals.js":"2","C:\\Users\\Mazzz\\Documents\\secretobjects\\secretobj\\scrt\\src\\index.js":"3"},{"size":8549,"mtime":1609474986482,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1607976907166,"results":"6","hashOfConfig":"5"},{"size":504,"mtime":1609317324180,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"135jkxl",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mazzz\\Documents\\secretobjects\\secretobj\\scrt\\src\\App.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37"],"import './App.css';\nimport React, { useRef, useState, Component, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Canvas, useFrame, useLoader } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nvar classNames = require('classnames');\n\nconst {\n  BroadcastMode, EnigmaUtils, Secp256k1Pen, CosmWasmClient, SigningCosmWasmClient, pubkeyToAddress, encodeSecp256k1Pubkey, makeSignBytes, findSequenceForSignedTx\n} = require(\"secretjs\");\n\nasync function main() {    \n  // connect to rest server\n  const client = new CosmWasmClient(\"https://bootstrap.secrettestnet.io\")\n  // mainnet\n  // const client = new CosmWasmClient(\"https://api.secretapi.io/\")\n\n  // query chain ID\n  await client.getChainId()\n\n  // query chain height\n  await client.getHeight()\n\n  // Get deployed code\n  await client.getCodes()\n\n  // Get the contracts for our simple counter\n  const contracts = await client.getContracts(103)\n  console.log(contracts);\n  const contractAddress = contracts[0].address\n\n  // Query the current count\n  let response = await client.queryContractSmart(contractAddress, { \"get_count\": {}})\n\n  console.log(`Count=${response.count}`)\n}\n//main();\n\n\nfunction SetUpPreview (geo, renderer) {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 10, 2000 );\n  \n  const material = new THREE.MeshBasicMaterial( {color: 0x00ff00, opacity: 0.5, transparent: true} );\n  //camera.position.z = 150;\n  //\n  //var geometry = loader.parse(res);\n  var mesh = new THREE.Mesh(geo, material);\n  scene.add(mesh);\n  console.log(geo);\n  geo.computeBoundingSphere();\n  geo.computeBoundingBox();\n  console.log(geo.boundingSphere.radius);\n  var campos = geo.boundingSphere.radius*2.5;\n  camera.position.z = campos;\n  scene.rotation.x -= Math.PI/2;\n  const box = new THREE.BoxHelper( mesh, 0xffff00 );\n  scene.add( box );\n  //\n  const light = new THREE.PointLight( 0xff0000, 10, 0, 1 );\n  light.position.set( 0, 0, campos );\n  scene.add( light );\n\n  function animate() {\n    requestAnimationFrame( animate );\n  \n    scene.rotation.z += 0.01;\n    scene.rotation.x += 0.001;\n    scene.rotation.y += 0.001;\n    \n    renderer.render( scene, camera );\n  }\n  animate();\n}\n\n\n\n\nclass NFTElement {\n  constructor(name, owner, price, pubdata, tempurl) {\n    this.name = name;\n    this.owner = owner;\n    this.price = price;\n    this.tempurl = tempurl;\n    var loader = new STLLoader();\n    loader.load(tempurl, function (geometry) {\n      this.pubdata = geometry;\n\n    })\n  }\n  upload(privdata) {\n    console.log(\"UploadHere\");\n  }\n\n}\nclass NFTPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.url = props.url;\n    console.log(this.url);\n    this.myRef = React.createRef();\n  }\n  componentDidMount() {\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth/4, window.innerHeight/4 );\n    this.myRef.current.appendChild(renderer.domElement);\n    var loader = new STLLoader();\n    loader.load(this.url, function (geo) {\n      SetUpPreview(geo, renderer)\n\n    });\n    \n  }\n\n  render() {\n    return <div ref={this.myRef} className=\"PreviewBox\"></div>\n  }\n}\n\nfunction App() {\n  var onChangeHandler= (event) => {\n    var fileObject = event.target.files[0];\n      var reader = new FileReader();\n      reader.onload = function ()\n      {\n        var loader = new STLLoader();\n        var geometry = loader.parse(this.result);\n        const renderer = new THREE.WebGLRenderer();\n        cubeRef.current.appendChild(renderer.domElement);\n        renderer.setSize( window.innerWidth/2.2, window.innerHeight/2.2 );\n        SetUpPreview(geometry, renderer)\n      };\n    reader.readAsArrayBuffer(fileObject)\n  };\n\n  //\n  var openWindow = (event) => {\n    if (event.target.innerText == \"Help\") {\n      setHelpHid(false)\n    }\n    else if (event.target.innerText == \"Upload\") {\n      setUploadHid(false)\n    };\n    setBackgroundInactive('BackgroundInactive')\n  };\n  var closeWindow = (event) => {\n    setHelpHid(true);\n    setUploadHid(true);\n    setBackgroundInactive('');\n\n  };\n  let NFT1 = new NFTElement(\"cat\", \"secret0x0address1\", \"3 wETH\", \"\",\"cat.stl\");\n  let NFT2 = new NFTElement(\"test2\", \"secretrndmwallt\", \"9 wETH\", \"\",\"test2.stl\");\n  let NFT3 = new NFTElement(\"deer\", \"secret127zy0v4k8r8fg325ql2yz2t32ku4va\", \"10 SCRT\", \"\",\"deer.stl\");\n  let NFT4 = new NFTElement(\"dog\", \"secret127jdafgksajsknmgnanngnmsanfnfs\", \"0.003 wBTC\", \"\",\"dog.stl\");\n  let NFT5 = new NFTElement(\"da kang\", \"secret48338fsfjsh4jw4nbfjsfjn4f4jf\", \"0.001 wETH\", \"\",\"kang.stl\");\n  let NFT6 = new NFTElement(\"Eli the Elephant\", \"secret48338fsfjsh4jw4nbfjsfjn4f4jf\", \"5 SCRT\", \"\",\"ele.stl\");\n  const elements = [NFT1, NFT2, NFT3, NFT4, NFT5, NFT6];\n  const [HelpHid, setHelpHid] = useState(true);\n  const [UploadHid, setUploadHid] = useState(true);\n  const [BackgroundInactive, setBackgroundInactive] = useState('');\n\n  var HelpClass = classNames({\n    PopupBase: true,\n    hidden: HelpHid == true,\n  });\n  var UploadClass = classNames({\n    PopupBase: true,\n    hidden: UploadHid == true\n  });\n  const cubeRef = useRef(null);\n  return (\n    <div className=\"App\">\n      <div className={HelpClass}>\n        <h2>What is this?</h2>\n        <p>\n          scrt NFT hub is an open source and a continuously evolving NFT platform that \n          aims to explore new ways of using and accessing Non-fungible tokens.\n          <br></br><br></br>\n          Initially the focus is for allowing visualisation and trading of files without \n          revealing their exact contents. This opens up the door to putting 3D files, art, music ect \n          onto the blockchain without ways to superficially duplicate them (ie you can't right click\n          and save images) as the files displayed would either be hidden or a lower quality\n          representation such as more pixelated images, noisy audio or 3D files represented as\n          static images.\n        </p>\n        <br></br>\n        <p>This project is currently a work in progress and a proof of concept \n          It currently only works with .stl 3D files, more filetypes will be supported in the future.\n        </p>\n        <p>\n          Made with love By Mazzz\n        </p>\n        <a href=\"https://github.com/Mazzz-zzz/scrtNFT\" i>\n          <img src=\"GitHubLogo32px.png\"></img>\n        </a>\n        <img className=\"closebtn\" src=\"cancel.svg\" onClick={closeWindow}></img>\n      </div>\n      <div className={UploadClass}>\n        <h2>Upload NFT</h2>\n        <p>Info about uploading</p>\n        <input className=\"UpInput\" type=\"file\" name=\"file\" onChange={onChangeHandler}/>\n        <div ref={cubeRef} className=\"PreviewBox\"></div>\n        <img className=\"closebtn\" src=\"cancel.svg\" onClick={closeWindow}></img>\n      </div>\n      <div className={BackgroundInactive}>\n        <header className=\"App-header\">\n          <h1>SCRT_NFT_HUB</h1>\n        </header>\n        <div className=\"NavBar\">\n          <div className=\"NavElem\" onClick={openWindow}>\n            Help\n          </div>\n          <div className=\"NavElem\">\n            Login\n          </div>\n          <div className=\"NavElem\" onClick={openWindow}>\n            Upload\n          </div>\n          <div className=\"NavElem\">\n            Switch\n          </div>\n        </div>\n        <div className=\"NFTContainer\">\n          {elements.map((value, index) => {\n            return (\n            <div key={index} className=\"NFTElem\">\n              <div className=\"NFTName\">{value.name}</div>\n              <div className=\"NFTPrice\">{value.price}</div>\n              <NFTPreview url={value.tempurl}></NFTPreview>\n              <div className=\"NFTLow\">\n                <div className=\"NFTInfo\">Info</div>\n                <div className=\"NFTBuy\">Buy</div>\n              </div>\n            </div>\n            )}\n            )}\n        </div>\n      </div>\n    </div>\n  );\n}\nclass Home extends React.Component {\n  render () {\n    return (\n      <div className=\"App\">\n        <header>\n          <div className=\"App-header\">\n            Secret NFT Hub\n          </div>\n          <nav>\n            test\n          </nav>\n        </header>\n        <div>\n          Body\n        </div>\n      </div>\n    )\n  }\n}\n\n\nfunction App1() {\n  return(\n    <Router>\n    <Switch>\n      <Route path=\"/app\" component={App}></Route>\n      <Route path=\"/\" component={Home}></Route>\n    </Switch>\n    </Router>\n  )\n}\nexport default App1;\n","C:\\Users\\Mazzz\\Documents\\secretobjects\\secretobj\\scrt\\src\\reportWebVitals.js",[],"C:\\Users\\Mazzz\\Documents\\secretobjects\\secretobj\\scrt\\src\\index.js",[],{"ruleId":"38","severity":1,"message":"39","line":2,"column":35,"nodeType":"40","messageId":"41","endLine":2,"endColumn":44},{"ruleId":"38","severity":1,"message":"42","line":2,"column":46,"nodeType":"40","messageId":"41","endLine":2,"endColumn":55},{"ruleId":"38","severity":1,"message":"43","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":16},{"ruleId":"38","severity":1,"message":"44","line":4,"column":10,"nodeType":"40","messageId":"41","endLine":4,"endColumn":16},{"ruleId":"38","severity":1,"message":"45","line":4,"column":18,"nodeType":"40","messageId":"41","endLine":4,"endColumn":26},{"ruleId":"38","severity":1,"message":"46","line":4,"column":28,"nodeType":"40","messageId":"41","endLine":4,"endColumn":37},{"ruleId":"38","severity":1,"message":"47","line":11,"column":3,"nodeType":"40","messageId":"41","endLine":11,"endColumn":7},{"ruleId":"38","severity":1,"message":"48","line":16,"column":3,"nodeType":"40","messageId":"41","endLine":16,"endColumn":16},{"ruleId":"38","severity":1,"message":"49","line":16,"column":18,"nodeType":"40","messageId":"41","endLine":16,"endColumn":29},{"ruleId":"38","severity":1,"message":"50","line":16,"column":31,"nodeType":"40","messageId":"41","endLine":16,"endColumn":43},{"ruleId":"38","severity":1,"message":"51","line":16,"column":61,"nodeType":"40","messageId":"41","endLine":16,"endColumn":82},{"ruleId":"38","severity":1,"message":"52","line":16,"column":84,"nodeType":"40","messageId":"41","endLine":16,"endColumn":99},{"ruleId":"38","severity":1,"message":"53","line":16,"column":101,"nodeType":"40","messageId":"41","endLine":16,"endColumn":122},{"ruleId":"38","severity":1,"message":"54","line":16,"column":124,"nodeType":"40","messageId":"41","endLine":16,"endColumn":137},{"ruleId":"38","severity":1,"message":"55","line":16,"column":139,"nodeType":"40","messageId":"41","endLine":16,"endColumn":162},{"ruleId":"38","severity":1,"message":"56","line":19,"column":16,"nodeType":"40","messageId":"41","endLine":19,"endColumn":20},{"ruleId":"57","severity":1,"message":"58","line":145,"column":32,"nodeType":"59","messageId":"60","endLine":145,"endColumn":34},{"ruleId":"57","severity":1,"message":"58","line":148,"column":37,"nodeType":"59","messageId":"60","endLine":148,"endColumn":39},{"ruleId":"57","severity":1,"message":"58","line":172,"column":21,"nodeType":"59","messageId":"60","endLine":172,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":176,"column":23,"nodeType":"59","messageId":"60","endLine":176,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":202,"column":11,"nodeType":"63","endLine":202,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":204,"column":9,"nodeType":"63","endLine":204,"endColumn":74},{"ruleId":"61","severity":1,"message":"62","line":211,"column":9,"nodeType":"63","endLine":211,"endColumn":74},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'Canvas' is defined but never used.","'useFrame' is defined but never used.","'useLoader' is defined but never used.","'Link' is defined but never used.","'BroadcastMode' is assigned a value but never used.","'EnigmaUtils' is assigned a value but never used.","'Secp256k1Pen' is assigned a value but never used.","'SigningCosmWasmClient' is assigned a value but never used.","'pubkeyToAddress' is assigned a value but never used.","'encodeSecp256k1Pubkey' is assigned a value but never used.","'makeSignBytes' is assigned a value but never used.","'findSequenceForSignedTx' is assigned a value but never used.","'main' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]